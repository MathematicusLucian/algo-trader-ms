docker-compose -f docker-compose.yml up --build
[+] Building 296.7s (33/33) FINISHED                 docker:desktop-linux
 => [algo_flask internal] load .dockerignore                         0.0s
 => => transferring context: 2B                                      0.0s
 => [algo_flask internal] load build definition from Dockerfile      0.0s
 => => transferring dockerfile: 746B                                 0.0s
 => [algo_flask internal] load metadata for docker.io/library/pytho  1.4s
 => [algo_flask internal] load build context                        34.0s
 => => transferring context: 2.91GB                                 33.9s
 => [algo_flask  1/20] FROM docker.io/library/python:3.11-slim@sha2  0.0s
 => CACHED [algo_flask  2/20] RUN mkdir -p /usr/src/app              0.0s
 => CACHED [algo_flask  3/20] WORKDIR /usr/src/app                   0.0s
 => [algo_flask  4/20] COPY . /usr/src/app/                          6.5s
 => [algo_flask  5/20] RUN chmod 777 /usr/src/app                    0.1s
 => [algo_flask  6/20] RUN chmod 777 /usr/src/app/entrypoint.sh      0.2s
 => [algo_flask  7/20] RUN apt-get update                            3.1s
 => [algo_flask  8/20] RUN apt-get install -y build-essential       26.6s
 => [algo_flask  9/20] RUN apt-get install -y uwsgi-plugin-python3   5.2s 
 => [algo_flask 10/20] RUN apt-get install -y python3-dev            4.5s 
 => [algo_flask 11/20] RUN apt-get install -y gcc                    1.0s 
 => [algo_flask 12/20] RUN apt-get install -y libevent-dev           1.2s 
 => [algo_flask 13/20] RUN pip install --upgrade pip                 1.4s 
 => [algo_flask 14/20] RUN pip install markupsafe                    0.9s 
 => [algo_flask 15/20] RUN pip3 install matplotlib                  11.4s 
 => [algo_flask 16/20] RUN pip install Cython                        1.8s 
 => [algo_flask 17/20] RUN pip3 install transformers==4.39.3         8.7s 
 => [algo_flask 18/20] RUN pip install uwsgi                         3.9s 
 => [algo_flask 19/20] RUN pip install --no-cache-dir -r requirem  166.5s 
 => [algo_flask 20/20] COPY ./uwsgi.ini /etc/uwsgi.ini               0.0s 
 => [algo_flask] exporting to image                                 15.8s 
 => => exporting layers                                             15.8s 
 => => writing image sha256:0523035b8ed846d43bfc5e0b55e56d05cf26d17  0.0s 
 => => naming to docker.io/library/flask                             0.0s 
 => [algo_nginx internal] load build definition from Dockerfile      0.0s 
 => => transferring dockerfile: 236B                                 0.0s
 => [algo_nginx internal] load .dockerignore                         0.0s
 => => transferring context: 134B                                    0.0s
 => [algo_nginx internal] load metadata for docker.io/library/nginx  1.9s
 => [algo_nginx internal] load build context                         0.0s
 => => transferring context: 1.32kB                                  0.0s
 => [algo_nginx 1/3] FROM docker.io/library/nginx:alpine@sha256:31b  0.0s
 => => resolve docker.io/library/nginx:alpine@sha256:31bad00311cb5e  0.0s
 => CACHED [algo_nginx 2/3] COPY ./nginx/nginx.conf /etc/nginx/ngin  0.0s
 => CACHED [algo_nginx 3/3] RUN chmod 777 /usr/share/nginx/html      0.0s
 => [algo_nginx] exporting to image                                  0.0s
 => => exporting layers                                              0.0s
 => => writing image sha256:dedbcb33b57100ca11e2e98316a6400f9b10ee0  0.0s
 => => naming to docker.io/library/nginx                             0.0s
[+] Running 2/1
 ✔ Container algo_flask_container  Recreated                         0.1s 
 ✔ Container algo_nginx_container  Recreated                         0.0s 
Attaching to algo_flask_container, algo_nginx_container
algo_flask_container  | [uWSGI] getting INI configuration from /etc/uwsgi.ini
algo_flask_container  | *** Starting uWSGI 2.0.25.1 (64bit) on [Tue Apr 16 00:09:15 2024] ***
algo_flask_container  | compiled with version: 12.2.0 on 16 April 2024 00:06:07
algo_flask_container  | os: Linux-6.5.11-linuxkit #1 SMP PREEMPT Wed Dec  6 17:08:31 UTC 2023
algo_flask_container  | nodename: ba01e4e9525b
algo_flask_container  | machine: aarch64
algo_flask_container  | clock source: unix
algo_flask_container  | detected number of CPU cores: 24
algo_flask_container  | current working directory: /usr/src/app
algo_flask_container  | detected binary path: /usr/local/bin/uwsgi
algo_flask_container  | !!! no internal routing support, rebuild with pcre support !!!
algo_flask_container  | uWSGI running as root, you can use --uid/--gid/--chroot options
algo_flask_container  | setgid() to 1
algo_flask_container  | setuid() to 1
algo_flask_container  | your memory page size is 4096 bytes
algo_flask_container  | detected max file descriptor number: 1048576
algo_flask_container  | lock engine: pthread robust mutexes
algo_flask_container  | thunder lock: disabled (you can enable it with --thunder-lock)
algo_flask_container  | uwsgi socket 0 bound to TCP address 0.0.0.0:5000 fd 3
algo_flask_container  | Python version: 3.11.9 (main, Apr 10 2024, 03:35:04) [GCC 12.2.0]
algo_flask_container  | Python main interpreter initialized at 0xffffab203a10
algo_flask_container  | python threads support enabled
algo_flask_container  | your server socket listen backlog is limited to 100 connections
algo_flask_container  | your mercy for graceful operations on workers is 60 seconds
algo_flask_container  | mapped 416720 bytes (406 KB) for 8 cores
algo_flask_container  | *** Operational MODE: preforking+threaded ***
algo_flask_container  | Matplotlib created a temporary cache directory at /tmp/matplotlib-2yrjz3zx because the default path (/root/.config/matplotlib) is not a writable directory; it is highly recommended to set the MPLCONFIGDIR environment variable to a writable directory, in particular to speed up the import of Matplotlib and to better support multiprocessing.
algo_flask_container  | There was a problem when trying to write in your cache folder (/root/.cache/huggingface/hub). You should set the environment variable TRANSFORMERS_CACHE to a writable directory.
algo_flask_container  | WSGI app 0 (mountpoint='') ready in 3 seconds on interpreter 0xffffab203a10 pid: 7 (default app)
algo_flask_container  | *** uWSGI is running in multiple interpreter mode ***
algo_flask_container  | spawned uWSGI master process (pid: 7)
algo_flask_container  | spawned uWSGI worker 1 (pid: 57, cores: 2)
algo_flask_container  | Python auto-reloader enabled
algo_flask_container  | spawned uWSGI worker 2 (pid: 60, cores: 2)
algo_flask_container  | spawned uWSGI worker 3 (pid: 63, cores: 2)
algo_flask_container  | spawned uWSGI worker 4 (pid: 66, cores: 2)